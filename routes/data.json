{
    "item":
    [{
        "id": "1",
        "term":"DevOps",
        "description":"DevOps is a set of practices, tools, and a cultural philosophy that automate and integrate the processes between software development and IT teams.",
        "references":"Atlassian (2016). What is DevOps? | Atlassian. [online] Atlassian. Available at: https://www.atlassian.com/devops."
    },
    {
        "id":"2",
        "term":"CI/CD",
        "description":"CI/CD is a method to frequently deliver apps to customers by introducing automation into the stages of app development.",
        "references":"Redhat (2019). What is CI/CD? [online] Redhat.com. Available at: https://www.redhat.com/en/topics/devops/what-is-ci-cd."
    },
    {
        "id":"3",
        "term":"Agile",
        "description":"The Agile methodology is a project management approach that involves breaking the project into phases and emphasizes continuous collaboration and improvement. Teams follow a cycle of planning, executing, and evaluating.",
        "references":"Atlassian (2019). Agile best practices and tutorials | Atlassian. [online] Atlassian. Available at: https://www.atlassian.com/agile."
    },
    {
        "id":"4",
        "term":"Automation",
        "description":"The application of technology, programs, robotics or processes to achieve outcomes with minimal human input.",
        "references":"IBM (2021). What is automation? [online] www.ibm.com. Available at: https://www.ibm.com/topics/automation."
    },
    {
        "id":"5",
        "term":"DevSecOps",
        "description":"DevSecOps stands for development, security, and operations. It's an approach to culture, automation, and platform design that integrates security as a shared responsibility throughout the entire IT lifecycle.",
        "references":"Redhat.com. (2019). What is DevSecOps? [online] Available at: https://www.redhat.com/en/topics/devops/what-is-devsecops."
    },
    {
        "id":"6",
        "term":"Software Development Life Cycle (SDLC)",
        "description":"The software development lifecycle (SDLC) is the cost-effective and time-efficient process that development teams use to design and build high-quality software. The goal of SDLC is to minimize project risks through forward planning so that software meets customer expectations during production and beyond. This methodology outlines a series of steps that divide the software development process into tasks you can assign, complete, and measure.",
        "references":"Amazon (n.d.). What is SDLC? - Software Development Lifecycle Explained - AWS. [online] Amazon Web Services, Inc. Available at: https://aws.amazon.com/what-is/sdlc/."
    },
    {
        "id":"7",
        "term":"Shift Left Testing",
        "description":"Shift Left testing is a software testing approach that places strong emphasis on conducting testing activities earlier in the development process by shifting all testing activities to earlier development stages rather than leaving until the very final stages.",
        "references":"Katalon (2023). Shift-Left Testing: How to Apply Shift Left Approach to Continuous Testing. [online] katalon.com. Available at: https://katalon.com/resources-center/blog/shift-left-testing-approach [Accessed 30 Jul. 2023]."
    },
    {
        "id":"8",
        "term":"User Acceptance Testing",
        "description":"User Acceptance Testing (UAT), which is performed on most UIT projects, sometimes called beta testing or end-user testing, is a phase of software development in which the software is tested in the 'real world' by the intended audience or business representative.",
        "references":"uit.stanford.edu. (n.d.). User Acceptance Testing | University IT. [online] Available at: https://uit.stanford.edu/pmo/UAT."
    },
    {
        "id":"9",
        "term":"Value Stream Mapping",
        "description":"Value stream mapping (sometimes called VSM) is a lean manufacturing technique to analyze, design, and manage the flow of materials and information required to bring a product to a customer.",
        "references":"Mukherjee, J. (2019). Value Stream Mapping | Atlassian. [online] Atlassian. Available at: https://www.atlassian.com/continuous-delivery/principles/value-stream-mapping."
    },
    {
        "id":"10",
        "term":"Vesion Control",
        "description":"Version control, also known as source control, is the practice of tracking and managing changes to software code.",
        "references":"Atlassian (2019). What is version control. [online] Atlassian. Available at: https://www.atlassian.com/git/tutorials/what-is-version-control."
    },
    {
        "id":"11",
        "term":"Event-Driven Architecture",
        "description":"An event-driven architecture uses events to trigger and communicate between decoupled services and is common in modern applications built with microservices.",
        "references":"Amazon Web Services, Inc. (n.d.). Event-Driven Architecture. [online] Available at: https://aws.amazon.com/event-driven-architecture/."
    },
    {
        "id":"12",
        "term":"Functional Testing",
        "description":"Functional testing is a type of testing that seeks to establish whether each application feature works as per the software requirements. Each function is compared to the corresponding requirement to ascertain whether its output is consistent with the end user’s expectations.",
        "references":"www.microfocus.com. (n.d.). What is Functional Testing? Types & Examples | Micro Focus. [online] Available at: https://www.microfocus.com/en-us/what-is/functional-testing."
    },
    {
        "id":"13",
        "term":"Integration Testing",
        "description":"Integration testing is a type of software testing where components of the software are gradually integrated and then tested as a unified group. Usually these components are already working well individually, but they may break when integrated with other components.",
        "references":"Katalon (2023). What Is Integration Testing And Its Types? [online] katalon.com. Available at: https://katalon.com/resources-center/blog/integration-testing [Accessed 13 Aug. 2023]."
    },
    {
        "id":"14",
        "term":"Legacy Application",
        "description":"An information system that may be based on outdated technologies, but is critical to day-to-day operations.",
        "references":"Gartner. (n.d.). Definition of Legacy Application Or System - Gartner Information Technology Glossary. [online] Available at: https://www.gartner.com/en/information-technology/glossary/legacy-application-or-system."
    },
    {
        "id":"15",
        "term":"Model-Based Testing",
        "description":"Model-based testing is a software testing technique where the run time behavior of the software under test is checked against predictions made by a model.",
        "references":"Hamilton, T. (2020). Model Based Testing Tutorial: What is, Tools & Example. [online] www.guru99.com. Available at: https://www.guru99.com/model-based-testing-tutorial.html."
    },
    {
        "id":"16",
        "term":"Non-Functional Testing",
        "description":"Non-Functional Testing is defined as a type of Software testing to check non-functional aspects (performance, usability, reliability, etc) of a software application. ",
        "references":"Hamilton, T. (2019). What is Non Functional Testing? Types with Example. [online] Guru99.com. Available at: https://www.guru99.com/non-functional-testing.html."
    },
    {
        "id":"17",
        "term":"Regression Testing",
        "description":"Regression testing is a type of software testing conducted after a code update to ensure that the update introduced no new bugs. This is because new code may bring in new logic that conflicts with the existing code, leading to defects.",
        "references":"katalon.com. (n.d.). What is Regression Testing? Definition, Tools & How to Get Started. [online] Available at: https://katalon.com/resources-center/blog/regression-testing."
    },
    {
        "id":"18",
        "term":"Root Cause Analysis",
        "description":"Root cause analysis (or RCA) is the quality management process by which an organization searches for the root of a problem, issue or incident after it occurs.",
        "references":"www.ibm.com. (n.d.). What is a root cause analysis? | IBM. [online] Available at: https://www.ibm.com/topics/root-cause-analysis."
    },
    {
        "id":"19",
        "term":"Test Automation",
        "description":"Test automation is the practice of running tests automatically, managing test data, and utilizing results to improve software quality.",
        "references":"AI-driven E2E automation with code-like flexibility for your most resilient tests. (2019). What Is Test Automation? A Simple, Clear Introduction. [online] Available at: https://www.testim.io/blog/what-is-test-automation/."
    },
    {
        "id":"20",
        "term":"Unit Testing",
        "description":"A unit test is a type of software test that focuses on components of a software product. The purpose is to ensure that each unit of software code works as expected. A unit can be a function, method, module, object, or other entity in an application’s source code.",
        "references":"Unit Testing: Definition, Examples, and Critical Best Practices. (2022). Bright Security. [online] 24 May. Available at: https://brightsec.com/blog/unit-testing/."
    },
    {
        "id":"21",
        "term":"GitOps",
        "description":"A DevOps methodology that uses Git repositories as the source of truth for infrastructure and application deployments. It involves using version-controlled manifests and automation to manage and update infrastructure and applications.",
        "references":"www.weave.worksurl! (n.d.). Scaling GitOps in 2023 - Emerging Developments & Predictions. [online] Available at: https://www.weave.works/blog/scaling-gitops-in-2023"
    },
    {
        "id":"22",
        "term":"Observability",
        "description":"The ability to monitor and understand complex systems by collecting and analyzing data from various sources, including logs, metrics, traces, and events.",
        "references":"Young, T. (2021). Modern Observability Is a Single Braid of Data. [online] The New Stack. Available at: https://thenewstack.io/modern-observability-is-a-single-braid-of-data/"
    },
    {
        "id":"23",
        "term":"Chaos Engineering",
        "description":"The practice of intentionally injecting failures and chaos into a system to proactively identify weaknesses and vulnerabilities, with the goal of improving system resilience.",
        "references":"principlesofchaos.org. (n.d.). PRINCIPLES OF CHAOS ENGINEERING - Principles of chaos engineering. [online] Available at: https://principlesofchaos.org"
    },
    {
        "id":"24",
        "term":"Dark Launching",
        "description":"A technique where new features or changes are deployed to production but remain hidden or inactive until they are ready to be activated for specific users or conditions.",
        "references":"Split. (n.d.). Dark Launch. [online] Available at: https://www.split.io/glossary/dark-launch/"
    },
    {
        "id":"25",
        "term":"Immutable Infrastructure",
        "description":"An approach where server instances, containers, or virtual machines are never modified once they are created; instead, new instances are created to replace old ones when updates are needed.",
        "references":"Stella, J. (2016). Immutable Infrastructure."
    },
    {
        "id":"26",
        "term":"Pipeline Orchestration",
        "description":"The process of coordinating and managing the various stages and components of a continuous integration/continuous deployment (CI/CD) pipeline, ensuring that each stage executes in the correct order.",
        "references":"martinekuan (2022). Choose a data pipeline orchestration technology - Azure Architecture Center. [online] learn.microsoft.com. Available at: https://learn.microsoft.com/en-us/azure/architecture/data-guide/technology-choices/pipeline-orchestration-data-movement"
    },
    {
        "id":"27",
        "term":"Canary Deployment",
        "description":"A release strategy in which a new version of an application is deployed to a subset of users or servers to test its stability and performance before rolling it out to the entire production environment.",
        "references":"Sato, D. (2014). bliki: CanaryRelease. [online] martinfowler.com. Available at: https://martinfowler.com/bliki/CanaryRelease.html"
    },
    {
        "id":"28",
        "term":"Bimodal IT",
        "description":"A concept that involves managing two separate but complementary modes of IT operation: one for traditional, stable systems (Mode 1) and another for agile, innovative systems (Mode 2).",
        "references":"Gartner. (n.d.). Definition of Bimodal - Gartner Information Technology Glossary. [online] Available at: https://www.gartner.com/en/information-technology/glossary/bimodal"
    },
    {
        "id":"29",
        "term":"Serverless Computing",
        "description":"A cloud computing model where developers write and deploy code in the form of functions without the need to manage servers or infrastructure. The cloud provider dynamically manages the underlying resources.",
        "references":"AWS (2019). Serverless Computing – Amazon Web Services. [online] Amazon Web Services, Inc. Available at: https://aws.amazon.com/serverless/"
    },
    {
        "id":"30",
        "term":"Zero Trust Security Model",
        "description":"An approach to cybersecurity that assumes no trust for users or systems, requiring strict identity verification and access controls for all resources, regardless of location.",
        "references":"CSO Online. (n.d.). What is zero trust? A model for more effective security. [online] Available at: https://www.csoonline.com/article/564201/what-is-zero-trust-a-model-for-more-effective-security.html."
    },
    {
        "id":"31",
        "term":"Trunk-Based Development",
        "description":"A software development approach where all developers work on a single shared branch (trunk) of the version control system, promoting continuous integration and minimizing long-lived feature branches.",
        "references":"paul-hammant (n.d.). Trunk Based Development. [online] trunkbaseddevelopment.com. Available at: https://trunkbaseddevelopment.com"
    },
    {
        "id":"32",
        "term":"Serverless Orchestration",
        "description":"The coordination and sequencing of serverless functions or microservices to create complex workflows or applications. It often involves using tools like AWS Step Functions or Azure Durable Functions.",
        "references":"Amazon Web Services, Inc. (n.d.). Serverless Workflow Orchestration – AWS Step Functions – Amazon Web Services. [online] Available at: https://aws.amazon.com/step-functions/"
    },
    {
        "id":"33",
        "term":"Service Mesh",
        "description":"A dedicated infrastructure layer that facilitates communication and control between microservices in a containerized or serverless environment. It offers features like load balancing, security, and observability.",
        "references":"www.redhat.com. (n.d.). What’s a service mesh? [online] Available at: https://www.redhat.com/en/topics/microservices/what-is-a-service-mesh"
    },
    {
        "id":"34",
        "term":"Secret Management",
        "description":"Securely storing, managing, and distributing sensitive information such as API keys, passwords, and encryption keys. It is crucial for maintaining security in DevOps pipelines.",
        "references":"www.beyondtrust.com. (n.d.). What is Secrets Management? [online] Available at: https://www.beyondtrust.com/resources/glossary/secrets-management"
    },
    {
        "id":"35",
        "term":"Golden Image",
        "description":"A pre-configured, standardized system or virtual machine image that contains a fully configured operating system and application stack. It serves as a base for deploying consistent environments.",
        "references":"www.redhat.com. (n.d.). What is a golden image? [online] Available at: https://www.redhat.com/en/topics/linux/what-is-a-golden-image"
    },
    {
        "id":"36",
        "term":"Capacity Planning",
        "description":"The process of forecasting and managing computing resources (CPU, memory, storage) required to meet the demands of an application or system, ensuring optimal performance.",
        "references":"DZone (2017). Capacity Planning Process – Part 1 - DZone Performance. [online] dzone.com. Available at: https://dzone.com/articles/capacity-planning-process-part-1"
    },
    {
        "id":"37",
        "term":"Service Catalog",
        "description":"A centralized directory or repository that lists all available IT services, applications, and resources within an organization. It helps streamline service request and provisioning processes.",
        "references":"www.freshworks.com. (n.d.). Understanding the Benefits of IT Service Catalog - Freshservice. [online] Available at: https://www.freshworks.com/freshservice/it-service-catalog/"
    },
    {
        "id":"38",
        "term":"Cattle vs. Pets",
        "description":"A metaphor used to describe how servers are managed in a cloud-native and DevOps context. 'Cattle' refers to disposable, easily replaceable servers, while 'Pets' are servers that are carefully nurtured and maintained.",
        "references":"Samir (2021). DevOps Concepts: Pets vs. Cattle. [online] IOD - The Content Engineers. Available at: https://iamondemand.com/blog/devops-concepts-pets-vs-cattle/"
    },
    {
        "id":"39",
        "term":"Custom Resource Definitions (CRDs)",
        "description":"Allow you to define custom resources and their schemas in Kubernetes, extending the Kubernetes API to manage custom application-specific objects.",
        "references":"Kubernetes. (n.d.). Custom Resources. [online] Available at: https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/"
    },
    {
        "id":"40",
        "term":"ResourceQuotas",
        "description":"Kubernetes objects that allow you to set constraints on the resource usage (CPU, memory, storage) of pods and containers within a namespace, preventing resource overuse.",
        "references":"Kubernetes. (n.d.). Resource Quotas. [online] Available at: https://kubernetes.io/docs/concepts/policy/resource-quotas/"
    },
    {
        "id":"41",
        "term":"Kubelet",
        "description":"A Kubernetes agent that runs on each node in the cluster. It is responsible for managing containers on the node and ensuring they are in the desired state.",
        "references":"Kubernetes. (n.d.). kubelet. [online] Available at: https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/"
    },
    {
        "id":"42",
        "term":"Ephemeral Containers",
        "description":"Temporary containers that can be added to a running pod for troubleshooting or debugging purposes without modifying the pod's original configuration.",
        "references":"Kubernetes. (n.d.). Ephemeral Containers. [online] Available at: https://kubernetes.io/docs/concepts/workloads/pods/ephemeral-containers/"
    },
    {
        "id":"43",
        "term":"Configuration Drift",
        "description":"When servers in an organization’s infrastructure become more and more different over time, drifting away from their original intended state. Typically caused by untracked and unmonitored changes to the system over time.",
        "references":"Coder. (n.d.). What is configuration drift? [online] Available at: https://coder.com/blog/what-is-configuration-drift"
    },
    {
        "id":"44",
        "term":"Build Artifact Repository",
        "description":"Centralized storage for all binaries used during build which simplifies dependency management and build processe and helps make automated deployment practical and scalable.",
        "references":"JetBrains. (n.d.). What is an Artifact Repository? | TeamCity CI/CD Guide. [online] Available at: https://www.jetbrains.com/teamcity/ci-cd-guide/concepts/artifact-repository/"
    },
    {
        "id":"45",
        "term":"Complex-Adaptive Systems",
        "description":"A system made of a collection of similar, smaller pieces that are dynamically connected and can change to adapt to changes for the benefit of a bigger system.",
        "references":"Chan, S. (2001). Complex Adaptive Systems. [online] Available at: https://web.mit.edu/esd.83/www/notebook/Complex%20Adaptive%20Systems.pdf"
    },
    {
        "id":"46",
        "term":"Out-of-the-box Tools",
        "description":"Tools that provide a set of functionalities that works immediately after installation with hardly any configuration or modification needs, allowing a quick deployment pipeline setup.",
        "references":"Reed, N. (2022). OOTB meaning in tech: is ‘out of the box’ always better? [online] Parker Software. Available at: https://www.parkersoftware.com/blog/ootb-meaning-in-tech-is-out-of-the-box-always-better"
    },
    {
        "id":"47",
        "term":"Rollback",
        "description":"An automatic/manual operation that restores a system to a previously defined state.",
        "references":"Unleash. (n.d.). Rollback. [online] Available at: https://www.getunleash.io/rollback"
    },
    {
        "id":"48",
        "term":"Self-Service Deployment ",
        "description":"The action of automating deployment processes to an extent for developers to allow project managers or even clients to directly control deployments.",
        "references":"Deploy, O. (n.d.). Empower your team with self-service application deployments. [online] Octopus Deploy. Available at: https://octopus.com/blog/self-service-deployments"
    },
    {
        "id":"49",
        "term":"Technical Debt",
        "description":"Aging technology that persistently causes issues or increases risk of security compromises.",
        "references":"Radigan, D. (n.d.). Escaping the black hole of technical debt. [online] Atlassian. Available at: https://www.atlassian.com/agile/software-development/technical-debt"
    },
    {
        "id":"50",
        "term":"Self-Managing Flow",
        "description":"A way of organizing work and processes that allows teams to function autonomously and efficiently. Simply put, a 'No Boss Team'.",
        "references":"reclaim.ai. (n.d.). What are Self-Managed Teams? Top Benefits vs. Disadvantages | Reclaim. [online] Available at: https://reclaim.ai/blog/self-managed-teams"
    }]
}